version: '3.7'
  
services:
  drone-server:
    env_file: .env
    image: drone/drone:1
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./drone:/data
      - /root/.docker/config.json:/root/.docker/config.json
    restart: always
    environment:
      - DRONE_DOCKER_CONFIG=/root/.docker/config.json
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_TLS_AUTOCERT=true
      - DRONE_RUNNER_CAPACITY=10
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_USER_CREATE=username:derek.chen,admin:true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_AGENTS_ENABLED=true
      # GITLAB Config
      - DRONE_GITLAB_CLIENT_ID=${DRONE_GITLAB_CLIENT_ID}
      - DRONE_GITLAB_CLIENT_SECRET=${DRONE_GITLAB_CLIENT_SECRET}
      - DRONE_GITLAB_SERVER=${DRONE_GITLAB_SERVER}
  drone-agent:
    image: drone/drone-runner-docker:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/root/.docker/config.json
    restart: always
    environment:
      - DRONE_DOCKER_CONFIG=/root/.docker/config.json
      - DRONE_LOGS_TRACE=true
      - DRONE_RPC_HOST=${DRONE_SERVER_HOST}
      - DRONE_RPC_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=10
      - DRONE_RUNNER_NAME=${HOSTNAME}
    depends_on:
      - drone-server
